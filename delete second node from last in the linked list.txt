LINKED LIST

PROBLEM STATEMENT:

Write a Program to delete the second last element from the list. If deletion of second last element is not possible, print "Deletion of second last element is not possible", Otherwise print the list after deleting the second last element.

CODE:


class node:
    def __init__(self,data):
        self.data=data
        self.left=None
        self.right=None
class double:
    def __init__(self):
        self.head=self.tail=None
    def insert(self,data):
        n=node(data)
        if self.head==None:
            self.head=self.tail=n
        else:
            self.tail.right=n
            n.left=self.tail
            self.tail=n
    def btraverse(self):
        temp=self.tail.left
        temp.left.right=self.tail
        self.tail.left=temp.left
        temp.left=temp.right=None
        d.show()
    def show(self):
        temp=self.head
        while temp!=None:
            print(temp.data,end=" ")
            temp=temp.right
d=double()
while True:
    value=int(input())
    if value<0:
        break
    d.insert(value)
print("Before deleting:")
d.show()
print("\nAfter deleting:")
d.btraverse()

Sample Input 0

1
2
3
4
-1
Sample Output 0

Before deleting:
1 2 3 4
After deleting:
1 2 4
Sample Input 1

23
34
55
12
66
45
33
-1
Sample Output 1

Before deleting:
23 34 55 12 66 45 33
After deleting:
23 34 55 12 66 33